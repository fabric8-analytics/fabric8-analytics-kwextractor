{
  "content": "======\nBehave\n======\n\n.. image:: https://badges.gitter.im/Join%20Chat.svg\n   :alt: Join the chat at https://gitter.im/behave/behave\n   :target: https://gitter.im/behave/behave?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n\n.. image:: https://img.shields.io/travis/behave/behave/master.svg\n    :target: https://travis-ci.org/behave/behave\n    :alt: Travis CI Build Status\n\n.. image:: https://img.shields.io/pypi/v/behave.svg\n    :target: https://pypi.python.org/pypi/behave\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/dm/behave.svg\n    :target: https://pypi.python.org/pypi/behave\n    :alt: Downloads\n\n.. image:: https://img.shields.io/pypi/l/behave.svg\n    :target: https://pypi.python.org/pypi/behave/\n    :alt: License\n\n.. |logo| image:: https://raw.github.com/behave/behave/master/docs/_static/behave_logo1.png\n\nbehave is behavior-driven development, Python style.\n\n|logo|\n\nBehavior-driven development (or BDD) is an agile software development\ntechnique that encourages collaboration between developers, QA and\nnon-technical or business participants in a software project.\n\n*behave* uses tests written in a natural language style, backed up by Python\ncode.\n\nFirst, `install *behave*.`_\n\n\nNow make a directory called \"features/\".\nIn that directory create a file called \"example.feature\" containing:\n\n.. code-block:: gherkin\n\n    # -- FILE: features/example.feature\n    Feature: Showing off behave\n\n      Scenario: Run a simple test\n        Given we have behave installed\n         When we implement 5 tests\n         Then behave will test them for us!\n\nMake a new directory called \"features/steps/\".\nIn that directory create a file called \"example_steps.py\" containing:\n\n.. code-block:: python\n\n    # -- FILE: features/steps/example_steps.py\n    from behave import given, when, then, step\n\n    @given('we have behave installed')\n    def step_impl(context):\n        pass\n\n    @when('we implement {number:d} tests')\n    def step_impl(context, number):  # -- NOTE: number is converted into integer\n        assert number > 1 or number == 0\n        context.tests_count = number\n\n    @then('behave will test them for us!')\n    def step_impl(context):\n        assert context.failed is False\n        assert context.tests_count >= 0\n\nRun behave:\n\n.. code-block:: bash\n\n    $ behave\n    Feature: Showing off behave # features/example.feature:2\n\n      Scenario: Run a simple test          # features/example.feature:4\n        Given we have behave installed     # features/steps/example_steps.py:4\n        When we implement 5 tests          # features/steps/example_steps.py:8\n        Then behave will test them for us! # features/steps/example_steps.py:13\n\n    1 feature passed, 0 failed, 0 skipped\n    1 scenario passed, 0 failed, 0 skipped\n    3 steps passed, 0 failed, 0 skipped, 0 undefined\n\nNow, continue reading to learn how to get the most out of *behave*. To get started,\nwe recommend the `tutorial`_ and then the `feature testing language`_ and\n`api`_ references.\n\n\n.. _`Install *behave*.`: http://pythonhosted.org/behave/install.html\n.. _`tutorial`: http://pythonhosted.org/behave/tutorial.html#features\n.. _`feature testing language`: http://pythonhosted.org/behave/gherkin.html\n.. _`api`: http://pythonhosted.org/behave/api.html\n\n\nMore Information\n-------------------------------------------------------------------------------\n\n* `behave documentation`_ (`latest changes`_)\n* `behave.example`_: Behave Examples and Tutorials (docs, executable examples).\n\n.. _behave documentation: http://pythonhosted.org/behave/\n.. _latest changes: https://github.com/behave/behave/blob/master/CHANGES.rst\n.. _behave.example: https://github.com/behave/behave.example\n\n"
}
